---

- name: Stop node application to clear up port 80 for certbot challenge
  shell:
    cmd: docker-compose stop
    chdir: "/home/{{ username }}/superset"

- name: Create cert directory if it does not exist
  file:
    path: "/home/{{ username }}/superset/certs"
    state: directory
    mode: '0755'
    owner: "{{ username }}"
    group: "{{ group_name }}"

- name: Run certbot for SSL
  include_role:
    name: geerlingguy.certbot
  vars:
    certbot_create_if_missing: true
    certbot_admin_email: "{{ certbot_admin_email }}"
    certbot_certs:
      - domains:
          - "{{ fqdn }}"
    certbot_create_standalone_stop_services: []

- name: Create fullchain cert symbolic link
  file:
    src: /etc/letsencrypt/live/{{ fqdn }}/fullchain.pem
    dest: /home/{{ username }}/superset/certs/fullchain.pem
    owner: "{{ username }}"
    group: "{{ group_name }}"
    state: link
  when: ssl_enable

- name: Create fullchain cert symbolic link
  file:
    src: /etc/letsencrypt/live/{{ fqdn }}/privkey.pem
    dest: /home/{{ username }}/superset/certs/privkey.pem
    owner: "{{ username }}"
    group: "{{ group_name }}"
    state: link
  when: ssl_enable

#- name: Move cert to certs
#  command: cp /etc/letsencrypt/live/{{ fqdn }}/fullchain.pem /home/{{ username }}/superset/certs/fullchain.pem
#  when: ssl_enable

#- name: Move key to certs
#  command: cp /etc/letsencrypt/live/{{ fqdn }}/privkey.pem /home/{{ username }}/superset/certs/privkey.pem
#  when: ssl_enable

- name: Copy over nginx conf for SSL
  template:
    src: nginx.conf
    dest: "/home/{{ username }}/superset/nginx/nginx.conf"

- name: Copy over superset nginx conf for SSL
  template:
    src: superset.conf
    dest: "/home/{{ username }}/superset/nginx/superset.conf"
  notify:
    - restart docker-compose

- name: Stop node application to clear up port 80 for certbot challenge
  shell:
    cmd: docker-compose -f docker-compose.yml -f docker-compose.override.ssl.yml up -d
    chdir: "/home/{{ username }}/superset"
